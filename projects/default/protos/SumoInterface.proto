#VRML_SIM R2021b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# documentation url: https://www.cyberbotics.com/doc/automobile/sumo-interface
# Supervisor interfacing SUMO with Webots
# template language: javascript

PROTO SumoInterface [
  field SFString  name                  "sumo interface"
  field SFBool    gui                   TRUE
  field SFBool    useNetconvert         TRUE
  field SFBool    enableTrafficLights   TRUE
  field SFBool    enableWheelsRotation  FALSE
  field SFInt32   maxVehicles           100
  field SFInt32   radius               -1
  field SFFloat   maximumLateralSpeed   2.5
  field SFFloat   maximumAngularSpeed   3
  field SFFloat   laneChangeDelay       3
  field SFBool    enableHeight          FALSE
  field SFInt32   step                  200
  field SFInt32   port                  8873
  field SFInt32   seed                  1
  field SFString  networkFiles          ""
  field SFString  sumoArguments         ""
  field SFNode    display               NULL
  field SFBool    verbose               FALSE
  field SFBool    synchronization       TRUE
  field MFNode    children              []
  hiddenField SFBool  enableWheelsRoattion  FALSE  # deprecated in Webots 2018a.
  hiddenField SFInt32 maxVehicules          100    # deprecated in Webots 2018a.
]
{
  %{
    // tracks check
    let arguments = [];
    if (!fields.gui.value)
      arguments.push('--no-gui');
    if (!fields.useNetconvert.value)
      arguments.push('--no-netconvert');
    if (!fields.enableTrafficLights.value)
      arguments.push('--disable-traffic-lights');

    let enableWheelsRotation = fields.enableWheelsRotation.value;
    if (enableWheelsRotation === fields.enableWheelsRotation.defaultValue) {
      enableWheelsRotation = fields.enableWheelsRoattion.value;
      if (enableWheelsRotation !== fields.enableWheelsRoattion.defaultValue)
        console.error('Field \'enableWheelsRoattion\' is deprecated, please use field \'enableWheelsRotation\' instead.');
    }

    let maxVehicles = fields.maxVehicles.value;
    if (maxVehicles === fields.maxVehicles.defaultValue) {
      maxVehicles = fields.maxVehicules.value;
      if (maxVehicles !== fields.maxVehicules.defaultValue) {
        console.error('Field \'maxVehicules\' is deprecated, use field \'maxVehicles\' instead.');
    }

    arguments.push('--max-vehicles=' + maxVehicles);
    if (enableWheelsRotation)
      arguments.push('--rotate-wheels');
    if (fields.verbose.value) {
      arguments.push("--verbose");
    if (fields.enableHeight.value) {
      arguments.push('--enable-height');
    if (fields.networkFiles.value !== '') {
      arguments.push('--directory=' + fields.networkFiles.value);
    if (fields.sumoArguments.value !== '') {
      arguments.push('--sumo-arguments=' + fields.sumoArguments.value);
    arguments.push('--port=' + fields.port.value);
    arguments.push('--seed=' + fields.seed.value);
    arguments.push('--step=' + fields.step.value);
    arguments.push('--radius=' + fields.radius.value);
    arguments.push('--maximum-lateral-speed=' + fields.maximumLateralSpeed.value);
    arguments.push('--maximum-angular-speed=' + fields.maximumAngularSpeed.value);
    arguments.push('--lane-change-delay=' + fields.laneChangeDelay.value);
    let display = fields.display.value;
    if (display !== 'undefined') {
      arguments.push('--use-display');
      arguments.push('--display-zoom=' + display.fields.zoom.value);
      arguments.push('--display-refresh-rate=' + display.fields.refreshRate.value);
      if (display.fields.fitSize.value)
        arguments.push('--display-fit-size');
    }
  }%

  Robot {
    name IS name
    model "SUMO interface"
    controller "sumo_supervisor"
    controllerArgs [
      %{ for (let i = 0; i < arguments.length; ++i) { }%
      %{= '"' + arguments[i] + '"\n' }%
      %{ } }%
    ]
    supervisor TRUE
    synchronization IS synchronization
    children [
      Group {
        children IS children
      }
      Slot {
        type "sumo display"
        endPoint IS display
      }
    ]
  }
}
